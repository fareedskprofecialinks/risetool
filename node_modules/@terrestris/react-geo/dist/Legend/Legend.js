"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Legend = void 0;

var React = _interopRequireWildcard(require("react"));

var _Logger = _interopRequireDefault(require("@terrestris/base-util/dist/Logger"));

var _MapUtil = _interopRequireDefault(require("@terrestris/ol-util/dist/MapUtil/MapUtil"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _isEqual = require('lodash/isEqual');

/**
 * Class representing the Legend.
 *
 * @class Legend
 * @extends React.Component
 */
var Legend =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Legend, _React$Component);

  /**
   * The className added to this component.
   * @private
   */

  /**
   * Create the Legend.
   *
   * @constructs Legend
   */
  function Legend(props) {
    var _this;

    _classCallCheck(this, Legend);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "className", "".concat(_constants.CSS_PREFIX, "legend"));

    var layer = props.layer,
        extraParams = props.extraParams;
    _this.state = {
      legendUrl: _this.getLegendUrl(layer, extraParams)
    };
    return _this;
  }
  /**
   * Invoked immediately after updating occurs. This method is not called for
   * the initial render.
   *
   * @param prevProps The previous props.
   */


  _createClass(Legend, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this$props = this.props,
          extraParams = _this$props.extraParams,
          layer = _this$props.layer;

      if (extraParams && !_isEqual(extraParams, prevProps.extraParams)) {
        this.setState({
          legendUrl: this.getLegendUrl(layer, extraParams)
        });
      }
    }
    /**
     * Get the corresponding legendGraphic of a layer. If layer is configured with
     * "legendUrl" this will be used. Otherwise a getLegendGraphic requestString
     * will be created by the MapUtil.
     *
     * @param layer The layer to get the legend graphic request for.
     * @param extraParams The extra params.
     */

  }, {
    key: "getLegendUrl",
    value: function getLegendUrl(layer, extraParams) {
      var legendUrl;

      if (layer.get('legendUrl')) {
        legendUrl = layer.get('legendUrl');
      } else {
        legendUrl = _MapUtil["default"].getLegendGraphicUrl(layer, extraParams);
      }

      return legendUrl;
    }
    /**
     * onError handler for the rendered img.
     */

  }, {
    key: "onError",
    value: function onError() {
      _Logger["default"].warn("Image error for legend of \"".concat(this.props.layer.get('name'), "\"."));
    }
    /**
     * The render function.
     */

  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          className = _this$props2.className,
          layer = _this$props2.layer,
          extraParams = _this$props2.extraParams,
          passThroughProps = _objectWithoutProperties(_this$props2, ["className", "layer", "extraParams"]);

      var finalClassName = className ? "".concat(className, " ").concat(this.className) : this.className;
      var alt = layer.get('name') ? layer.get('name') + ' legend' : 'layer legend';
      return React.createElement("div", _extends({
        className: finalClassName
      }, passThroughProps), React.createElement("img", {
        src: this.state.legendUrl,
        alt: alt,
        onError: this.onError.bind(this)
      }));
    }
  }]);

  return Legend;
}(React.Component);

exports.Legend = Legend;
var _default = Legend;
exports["default"] = _default;