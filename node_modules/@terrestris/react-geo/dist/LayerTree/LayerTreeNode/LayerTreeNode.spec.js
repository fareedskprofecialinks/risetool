"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var React = _interopRequireWildcard(require("react"));

var _LayerTreeNode = _interopRequireDefault(require("./LayerTreeNode"));

var _rcTree = _interopRequireDefault(require("rc-tree"));

var _enzyme = require("enzyme");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*eslint-env jest*/
describe('<LayerTreeNode />', function () {
  var defaultProps = {
    inResolutionRange: true,
    filterTreeNode: function filterTreeNode(ftn) {
      return ftn;
    }
  };
  it('is defined', function () {
    expect(_LayerTreeNode["default"]).not.toBeUndefined();
  });
  it('can be rendered (inside a Tree component)', function () {
    var Cmp = React.createElement(_rcTree["default"], null, React.createElement(_LayerTreeNode["default"], defaultProps));
    var wrapper = (0, _enzyme.mount)(Cmp);
    expect(wrapper).not.toBeUndefined();
  });
});