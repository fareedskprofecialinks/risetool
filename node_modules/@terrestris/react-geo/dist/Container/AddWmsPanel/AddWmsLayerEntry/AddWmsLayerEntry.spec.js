"use strict";

var _Tile = _interopRequireDefault(require("ol/layer/Tile"));

var _TileWMS = _interopRequireDefault(require("ol/source/TileWMS"));

var _AddWmsLayerEntry = _interopRequireDefault(require("./AddWmsLayerEntry"));

var _TestUtil = _interopRequireDefault(require("../../../Util/TestUtil"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/*eslint-env jest*/
describe('<AddWmsLayerEntry />', function () {
  var testLayerName = 'OSM-WMS';
  var testLayerTitle = 'OSM-WMS - by terrestris';
  var testLayer = new _Tile["default"]({
    visible: false,
    title: testLayerTitle,
    source: new _TileWMS["default"]({
      url: 'https://ows.terrestris.de/osm/service?',
      params: {
        'LAYERS': testLayerName,
        'TILED': true
      }
    })
  });
  it('is defined', function () {
    expect(_AddWmsLayerEntry["default"]).not.toBeUndefined();
  });
  it('can be rendered', function () {
    var wrapper = _TestUtil["default"].mountComponent(_AddWmsLayerEntry["default"], {
      wmsLayer: testLayer
    });

    expect(wrapper).not.toBeUndefined();
  });
  it('adds queryable icon if prop wmsLayer has queryable set to true', function () {
    testLayer.set('queryable', true);

    var wrapper = _TestUtil["default"].mountComponent(_AddWmsLayerEntry["default"], {
      wmsLayer: testLayer
    });

    var icons = wrapper.find('span.add-wms-add-info-icon');
    expect(icons).toHaveLength(1);
    expect(icons.getElement().props.className).toContain('fa-info');
    testLayer.set('queryable', false);
  });
  it('doesn\'t add queryable icon if prop wmsLayer has queryable set to false', function () {
    var wrapper = _TestUtil["default"].mountComponent(_AddWmsLayerEntry["default"], {
      wmsLayer: testLayer
    });

    var icons = wrapper.find('fa fa-info add-wms-add-info-icon');
    expect(icons).toHaveLength(0);
  });
  it('adds copyright icon if prop wmsLayer has filled wmsAttribution', function () {
    var wmsAttribution = 'Test - attribution';
    testLayer.getSource().setAttributions(wmsAttribution);

    var wrapper = _TestUtil["default"].mountComponent(_AddWmsLayerEntry["default"], {
      wmsLayer: testLayer
    });

    var icons = wrapper.find('span.add-wms-add-info-icon');
    expect(icons).toHaveLength(1);
    expect(icons.getElement().props.className).toContain('fa-copyright');
  });
  it('doesn\'t add copyright icon if prop wmsLayer no has filled attribution', function () {
    var wrapper = _TestUtil["default"].mountComponent(_AddWmsLayerEntry["default"], {
      wmsLayer: testLayer
    });

    var icons = wrapper.find('fa fa-copyright add-wms-add-info-icon');
    expect(icons).toHaveLength(0);
  });
  it('includes abstract in description text if abstract property is set for layer', function () {
    var _abstract = 'abstract';
    var expectedLine = "".concat(testLayerTitle, " - ").concat(_abstract, ":");
    testLayer.setProperties({
      "abstract": _abstract
    });
    var abstractProps = {
      wmsLayer: testLayer
    };

    var wrapper = _TestUtil["default"].mountComponent(_AddWmsLayerEntry["default"], abstractProps);

    var icons = wrapper.find('div.add-wms-layer-entry');
    expect(icons.getElement().props.children[0].props.children).toBe(expectedLine);
  });
});