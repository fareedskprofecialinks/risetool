{"ast":null,"code":"import axios from 'axios';\nlet APICallingService = {\n  sendRequestForPostWithAuth: (url, payload, CB) => {\n    let options = {};\n    var params = payload;\n    var formData = new FormData();\n\n    for (var k in params) {\n      formData.append(k, params[k]);\n    }\n\n    if (payload != null && payload != '') {\n      options = {\n        method: 'POST',\n        url: url,\n        timeout: 10000 * 3,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        data: formData\n      };\n    } else {\n      options = {\n        method: 'POST',\n        url: url,\n        timeout: 10000 * 3\n      };\n    }\n\n    try {\n      return axios(options).then(response => {\n        let responseOK = response && response.status == 200;\n\n        if (responseOK) {\n          return response.data;\n        }\n\n        return {\n          status: 'Failed',\n          error: response.data\n        };\n      });\n    } catch (e) {\n      return {\n        status: 'Failed',\n        error: e\n      };\n    }\n  },\n  sendRequestForGet: (url, obj, CB) => {\n    let options = {};\n\n    if (url.includes('translations')) {\n      options = {\n        mode: 'no-cors',\n        method: 'GET',\n        url: url,\n        timeout: 10000 * 3,\n        headers: {\n          'Authorization': 'VgJBwgCxMSE8H35fCehwiM6bKUiWK8xdCdQyfaES',\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n    } else {\n      options = {\n        method: 'GET',\n        url: url,\n        timeout: 10000 * 3\n      };\n    }\n\n    try {\n      return axios(options).then(response => {\n        let responseOK = response && response.status == 200;\n\n        if (responseOK) {\n          return response.data;\n        }\n\n        return {\n          status: 'Failed',\n          error: response.data\n        };\n      });\n    } catch (e) {\n      return {\n        status: 'Failed',\n        error: e\n      };\n    }\n  }\n};\nexport default APICallingService;","map":{"version":3,"names":["axios","APICallingService","sendRequestForPostWithAuth","url","payload","CB","options","params","formData","FormData","k","append","method","timeout","headers","data","then","response","responseOK","status","error","e","sendRequestForGet","obj","includes","mode"],"sources":["D:/xamp/htdocs/RiseSchool/Archive/src/services/APICallingService.js"],"sourcesContent":["import axios from 'axios';\n\nlet APICallingService = {\n\n    sendRequestForPostWithAuth: (url, payload, CB) => {\n        let options = {};\n        var params = payload;\n\n        var formData = new FormData();\n        for (var k in params) {\n            formData.append(k, params[k]);\n        }\n\n        if (payload != null && payload != '') {\n            options = {\n                method: 'POST',\n                url: url,\n                timeout: 10000 * 3,\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                data: formData\n            };\n        }\n        else {\n            options = {\n                method: 'POST',\n                url: url,\n                timeout: 10000 * 3,\n            };\n        }\n        try {\n            return axios(options).then(response => {\n                let responseOK = response && response.status == 200;\n                if (responseOK) {\n                    return response.data;\n                }\n                return {\n                    status: 'Failed',\n                    error: response.data\n                }\n            })\n        } catch (e) {\n            return {\n                status: 'Failed',\n                error: e\n            }\n        }\n    },\n\n    sendRequestForGet: (url, obj, CB) => {\n        let options = {};\n        if (url.includes('translations')) {\n            options = {\n                mode: 'no-cors',\n                method: 'GET',\n                url: url,\n                timeout: 10000 * 3,\n                headers: {\n                    'Authorization': 'VgJBwgCxMSE8H35fCehwiM6bKUiWK8xdCdQyfaES',\n                    'Access-Control-Allow-Origin': '*'\n                },\n            };\n        } else {\n            options = {\n                method: 'GET',\n                url: url,\n                timeout: 10000 * 3,\n            };\n        }\n\n        try {\n            return axios(options).then(response => {\n                let responseOK = response && response.status == 200;\n                if (responseOK) {\n                    return response.data;\n                }\n                return {\n                    status: 'Failed',\n                    error: response.data\n                }\n            })\n        } catch (e) {\n            return {\n                status: 'Failed',\n                error: e\n            }\n        }\n    },\n\n};\n\nexport default APICallingService;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,iBAAiB,GAAG;EAEpBC,0BAA0B,EAAE,CAACC,GAAD,EAAMC,OAAN,EAAeC,EAAf,KAAsB;IAC9C,IAAIC,OAAO,GAAG,EAAd;IACA,IAAIC,MAAM,GAAGH,OAAb;IAEA,IAAII,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;IACA,KAAK,IAAIC,CAAT,IAAcH,MAAd,EAAsB;MAClBC,QAAQ,CAACG,MAAT,CAAgBD,CAAhB,EAAmBH,MAAM,CAACG,CAAD,CAAzB;IACH;;IAED,IAAIN,OAAO,IAAI,IAAX,IAAmBA,OAAO,IAAI,EAAlC,EAAsC;MAClCE,OAAO,GAAG;QACNM,MAAM,EAAE,MADF;QAENT,GAAG,EAAEA,GAFC;QAGNU,OAAO,EAAE,QAAQ,CAHX;QAINC,OAAO,EAAE;UACL,gBAAgB;QADX,CAJH;QAONC,IAAI,EAAEP;MAPA,CAAV;IASH,CAVD,MAWK;MACDF,OAAO,GAAG;QACNM,MAAM,EAAE,MADF;QAENT,GAAG,EAAEA,GAFC;QAGNU,OAAO,EAAE,QAAQ;MAHX,CAAV;IAKH;;IACD,IAAI;MACA,OAAOb,KAAK,CAACM,OAAD,CAAL,CAAeU,IAAf,CAAoBC,QAAQ,IAAI;QACnC,IAAIC,UAAU,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,MAAT,IAAmB,GAAhD;;QACA,IAAID,UAAJ,EAAgB;UACZ,OAAOD,QAAQ,CAACF,IAAhB;QACH;;QACD,OAAO;UACHI,MAAM,EAAE,QADL;UAEHC,KAAK,EAAEH,QAAQ,CAACF;QAFb,CAAP;MAIH,CATM,CAAP;IAUH,CAXD,CAWE,OAAOM,CAAP,EAAU;MACR,OAAO;QACHF,MAAM,EAAE,QADL;QAEHC,KAAK,EAAEC;MAFJ,CAAP;IAIH;EACJ,CA9CmB;EAgDpBC,iBAAiB,EAAE,CAACnB,GAAD,EAAMoB,GAAN,EAAWlB,EAAX,KAAkB;IACjC,IAAIC,OAAO,GAAG,EAAd;;IACA,IAAIH,GAAG,CAACqB,QAAJ,CAAa,cAAb,CAAJ,EAAkC;MAC9BlB,OAAO,GAAG;QACNmB,IAAI,EAAE,SADA;QAENb,MAAM,EAAE,KAFF;QAGNT,GAAG,EAAEA,GAHC;QAINU,OAAO,EAAE,QAAQ,CAJX;QAKNC,OAAO,EAAE;UACL,iBAAiB,0CADZ;UAEL,+BAA+B;QAF1B;MALH,CAAV;IAUH,CAXD,MAWO;MACHR,OAAO,GAAG;QACNM,MAAM,EAAE,KADF;QAENT,GAAG,EAAEA,GAFC;QAGNU,OAAO,EAAE,QAAQ;MAHX,CAAV;IAKH;;IAED,IAAI;MACA,OAAOb,KAAK,CAACM,OAAD,CAAL,CAAeU,IAAf,CAAoBC,QAAQ,IAAI;QACnC,IAAIC,UAAU,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,MAAT,IAAmB,GAAhD;;QACA,IAAID,UAAJ,EAAgB;UACZ,OAAOD,QAAQ,CAACF,IAAhB;QACH;;QACD,OAAO;UACHI,MAAM,EAAE,QADL;UAEHC,KAAK,EAAEH,QAAQ,CAACF;QAFb,CAAP;MAIH,CATM,CAAP;IAUH,CAXD,CAWE,OAAOM,CAAP,EAAU;MACR,OAAO;QACHF,MAAM,EAAE,QADL;QAEHC,KAAK,EAAEC;MAFJ,CAAP;IAIH;EACJ;AAtFmB,CAAxB;AA0FA,eAAepB,iBAAf"},"metadata":{},"sourceType":"module"}