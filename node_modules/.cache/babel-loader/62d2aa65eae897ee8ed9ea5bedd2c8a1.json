{"ast":null,"code":"//let baseurl = 'https://www.businessqre.net/quickrisk2/api/';\nlet baseurl = 'http://3.137.46.107/quickrisk2/api/';\n\nconst crypto = require('crypto');\n\nconst filedisc = new Uint8Array([13, 78, 135, 106, 70, 102, 131, 120, 79, 100, 78, 208, 254, 223, 30, 113, 100, 32, 188, 126, 40, 89, 80, 175, 9, 15, 139, 53, 89, 149, 217, 65]);\nconst fileSizeArr = new Uint8Array([213, 4, 147, 122, 191, 82, 89, 155, 208, 154, 204, 78, 101, 51, 219, 36]);\n\nconst encrypt = text => {\n  let cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(filedisc), fileSizeArr);\n  let encrypted = cipher.update(text);\n  encrypted = Buffer.concat([encrypted, cipher.final()]);\n  return {\n    encryptedData: encrypted.toString('hex')\n  };\n};\n\nconst decrypt = text => {\n  let ivkey = fileSizeArr;\n  let encryptedText = Buffer.from(text.encryptedData, 'hex');\n  let decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(filedisc), ivkey);\n  let decrypted = decipher.update(encryptedText);\n  decrypted = Buffer.concat([decrypted, decipher.final()]);\n  return decrypted.toString();\n};\n\nconst services = {\n  url: {\n    languageListUrl: baseurl + 'language',\n    languageUrl: baseurl + 'getLanguageFile',\n    loginUrl: baseurl + 'login',\n    signupUrl: baseurl + 'sign-up',\n    registrationUrl: baseurl + 'get-all-users',\n    resetPasswordUrl: baseurl + 'request-password-reset',\n    changePasswordUrl: baseurl + 'reset-password',\n    savequetionUrl: baseurl + 'save-questionnaire-result',\n    getLocations: baseurl + 'find-nearby-places?',\n    sendFeedback: baseurl + 'submit-feedback'\n  },\n  setLoginData: obj => {\n    let temp = encrypt(JSON.stringify(obj));\n    localStorage.setItem('LoginData', JSON.stringify(temp));\n  },\n  getLoginData: () => {\n    let LoginData = localStorage.getItem('LoginData');\n    let LoginDataEncrypted = JSON.parse(LoginData);\n    return LoginDataEncrypted ? JSON.parse(decrypt(LoginDataEncrypted)) : null;\n  }\n};\nexport default services;","map":{"version":3,"names":["baseurl","crypto","require","filedisc","Uint8Array","fileSizeArr","encrypt","text","cipher","createCipheriv","Buffer","from","encrypted","update","concat","final","encryptedData","toString","decrypt","ivkey","encryptedText","decipher","createDecipheriv","decrypted","services","url","languageListUrl","languageUrl","loginUrl","signupUrl","registrationUrl","resetPasswordUrl","changePasswordUrl","savequetionUrl","getLocations","sendFeedback","setLoginData","obj","temp","JSON","stringify","localStorage","setItem","getLoginData","LoginData","getItem","LoginDataEncrypted","parse"],"sources":["D:/xamp/htdocs/RiseSchool/Archive/src/config/config.js"],"sourcesContent":["//let baseurl = 'https://www.businessqre.net/quickrisk2/api/';\nlet baseurl = 'http://3.137.46.107/quickrisk2/api/';\nconst crypto = require('crypto');\n\nconst filedisc = new Uint8Array([13,78,135,106,70,102,131,120,79,100,78,208,254,223,30,113,100,32,188,126,40,89,80,175,9,15,139,53,89,149,217,65]);\nconst fileSizeArr = new Uint8Array([213,4,147,122,191,82,89,155,208,154,204,78,101,51,219,36]);\n\nconst encrypt = (text)=> {\n    \n    let cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(filedisc), fileSizeArr);\n    let encrypted = cipher.update(text);\n    encrypted = Buffer.concat([encrypted, cipher.final()]);\n    return {  encryptedData: encrypted.toString('hex') };\n}\n\nconst decrypt = (text)=> {\n\n    let ivkey = fileSizeArr;\n    let encryptedText = Buffer.from(text.encryptedData, 'hex');\n    let decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(filedisc), ivkey);\n    let decrypted = decipher.update(encryptedText);\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\n    return decrypted.toString();\n}\n\nconst services = {\n    url: { \n        languageListUrl: baseurl + 'language',\n        languageUrl: baseurl + 'getLanguageFile',\n        loginUrl: baseurl + 'login',\n        signupUrl: baseurl + 'sign-up',\n        registrationUrl: baseurl + 'get-all-users',\n        resetPasswordUrl: baseurl + 'request-password-reset',\n        changePasswordUrl: baseurl + 'reset-password',\n        savequetionUrl: baseurl + 'save-questionnaire-result',\n        getLocations:baseurl +'find-nearby-places?',\n        sendFeedback:baseurl +'submit-feedback'\n    },\n\n    setLoginData: (obj) => {\n        let temp = encrypt(JSON.stringify(obj));\n        localStorage.setItem('LoginData', JSON.stringify(temp));\n    },\n\n    getLoginData: () => {\n        let LoginData = localStorage.getItem('LoginData');\n        let LoginDataEncrypted = JSON.parse(LoginData);\n        return LoginDataEncrypted ? JSON.parse(decrypt(LoginDataEncrypted)) : null;\n    }\n    \n}\n\nexport default services;"],"mappings":"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"},"metadata":{},"sourceType":"module"}