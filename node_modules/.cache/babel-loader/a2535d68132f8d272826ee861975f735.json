{"ast":null,"code":"var _jsxFileName = \"D:\\\\xamp\\\\htdocs\\\\RiseSchool\\\\Archive\\\\src\\\\routers\\\\Login.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './../App.css';\nimport GoogleLogin from 'react-google-login';\nimport Recaptcha from 'react-recaptcha';\nimport Modal from 'react-bootstrap/Modal';\nimport FacebookLogin from './../components/FacebookLogin';\nimport config from './../config/config';\nimport i18n from './../utils/i18n';\nimport ClientCaptcha from \"react-client-captcha\";\nimport \"react-client-captcha/dist/index.css\";\nimport ReactTooltip from 'react-tooltip';\nimport { fetchLoginService } from './../services/webServices';\n\nconst Login = props => {\n  const [show, setShow] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [isVerified, setIsVerified] = useState(false);\n  const [state, setState] = useState({\n    userName: '',\n    password: '',\n    userNameError: true,\n    passwordError: true,\n    invalidUser: false,\n    captchaCode: '',\n    enteredCaptchaCode: '',\n    enteredCaptchaCodeError: false\n  });\n  const [position, setPosition] = useState([0, 0]);\n  const idleTimer = useRef(null);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [language, setLanguage] = useState('en');\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setPosition([position.coords.latitude, position.coords.longitude]);\n    });\n    localStorage.removeItem('LoginData');\n    let lang = localStorage.getItem('language');\n    setLanguage(lang);\n  }, []);\n\n  const responseGoogle = e => {\n    if (e.profileObj && e.profileObj.email) {\n      let payload = {\n        email: e.profileObj && e.profileObj.email,\n        name: e.profileObj && e.profileObj.givenName,\n        family_name: e.profileObj && e.profileObj.familyName,\n        oauth_type: 'google'\n      };\n      fetchLoginService(payload, CB => {\n        if (CB.status == \"Success\") {\n          config.setLoginData(CB.data); // if (CB.data.score) {\n          //     props.history.replace({\n          //         pathname: 'dashboard',\n          //         state: {\n          //             pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n          //                 HR: 0,\n          //                 OP: 0,\n          //                 FIN: 0,\n          //                 TI: 0,\n          //                 MKT: 0,\n          //                 GP: 0,\n          //                 HE: 0,\n          //                 Rint: 0,\n          //                 Rex: 0,\n          //                 Ro: 0\n          //             },\n          //             pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n          //                 HR: 0,\n          //                 OP: 0,\n          //                 FIN: 0,\n          //                 TI: 0,\n          //                 MKT: 0,\n          //                 GP: 0,\n          //                 HE: 0,\n          //                 Rint: 0,\n          //                 Rex: 0,\n          //                 Ro: 0,\n          //                 PI:0\n          //             }, \n          //             pastResultData: CB.data.score ? JSON.parse(CB.data.score) : null,\n          //             pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : null,\n          //             userId: CB.data.user_id,\n          //             position: CB.data.latitude ? [CB.data.latitude, CB.data.longitude] : position,\n          //             assesment_type: CB.data.assesment_type\n          //         }\n          //     })\n          // }\n\n          if (CB.data.score && CB.multihazard_data.score) {\n            props.history.replace({\n              pathname: 'dashboard',\n              state: {\n                pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                  HR: 0,\n                  OP: 0,\n                  FIN: 0,\n                  TI: 0,\n                  MKT: 0,\n                  GP: 0,\n                  HE: 0,\n                  Rint: 0,\n                  Rex: 0,\n                  Ro: 0\n                },\n                pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                  HR: 0,\n                  OP: 0,\n                  FIN: 0,\n                  TI: 0,\n                  MKT: 0,\n                  GP: 0,\n                  HE: 0,\n                  Rint: 0,\n                  Rex: 0,\n                  Ro: 0,\n                  PI: 0\n                },\n                userId: CB.data.user_id,\n                position,\n                assesment_type: CB.data.assesment_type\n              }\n            });\n          } else if (CB.data.score) {\n            props.history.replace({\n              pathname: 'dashboard',\n              state: {\n                pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                  HR: 0,\n                  OP: 0,\n                  FIN: 0,\n                  TI: 0,\n                  MKT: 0,\n                  GP: 0,\n                  HE: 0,\n                  Rint: 0,\n                  Rex: 0,\n                  Ro: 0\n                },\n                userId: CB.data.user_id,\n                position,\n                assesment_type: CB.data.assesment_type\n              }\n            });\n          } else if (CB.multihazard_data.score) {\n            props.history.replace({\n              pathname: 'dashboard',\n              state: {\n                resultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                  HR: 0,\n                  OP: 0,\n                  FIN: 0,\n                  TI: 0,\n                  MKT: 0,\n                  GP: 0,\n                  HE: 0,\n                  Rint: 0,\n                  Rex: 0,\n                  Ro: 0\n                },\n                pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                  HR: 0,\n                  OP: 0,\n                  FIN: 0,\n                  TI: 0,\n                  MKT: 0,\n                  GP: 0,\n                  HE: 0,\n                  Rint: 0,\n                  Rex: 0,\n                  Ro: 0,\n                  PI: 0\n                },\n                userId: CB.data.user_id,\n                position,\n                assesment_type: CB.data.assesment_type\n              }\n            });\n          } else {\n            props.history.replace({\n              pathname: 'questionnaire',\n              state: {\n                userId: CB.data.user_id\n              }\n            });\n          }\n        }\n      });\n    } else {\n      alert('Please try later' + JSON.stringify(e));\n    }\n  };\n\n  const responseFacebook = e => {\n    let payload = {\n      email: e.email ? e.email : e.id,\n      name: e.name ? e.name : '',\n      oauth_type: 'facebook'\n    };\n    fetchLoginService(payload, CB => {\n      if (CB.status == \"Success\") {\n        props.history.replace({\n          pathname: 'dashboard',\n          state: {\n            resultData: CB.data.score ? JSON.parse(CB.data.score) : {\n              HR: 0,\n              OP: 0,\n              FIN: 0,\n              TI: 0,\n              MKT: 0,\n              GP: 0,\n              HE: 0,\n              Rint: 0,\n              Rex: 0,\n              Ro: 0\n            },\n            userId: CB.data.user_id,\n            position,\n            assesment_type: CB.data.assesment_type\n          }\n        });\n      }\n    });\n  };\n\n  const changePassword = e => {\n    const val = e.target.value;\n    const passwordReg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{12,}$/;\n\n    if (passwordReg.test(val)) {\n      setState(prevState => {\n        return { ...prevState,\n          password: val,\n          passwordError: false,\n          invalidUser: false\n        };\n      });\n    } else {\n      setState(prevState => {\n        return { ...prevState,\n          password: val,\n          passwordError: 'invalidPassword',\n          invalidUser: false\n        };\n      });\n    }\n  };\n\n  const changeEmail = e => {\n    const val = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        userName: val,\n        userNameError: false,\n        invalidUser: false\n      };\n    });\n  };\n\n  const changeCaptcha = e => {\n    let val = e.target.value;\n\n    if (val === \"\") {\n      setState(prevState => {\n        return { ...prevState,\n          enteredCaptchaCode: val,\n          enteredCaptchaCodeError: true\n        };\n      });\n    } else {\n      setState(prevState => {\n        return { ...prevState,\n          enteredCaptchaCode: val,\n          enteredCaptchaCodeError: false\n        };\n      });\n    }\n  };\n\n  const setCode = captchaCode => {\n    setState(prevState => {\n      return { ...prevState,\n        captchaCode: captchaCode,\n        enteredCaptchaCode: '',\n        enteredCaptchaCodeError: false\n      };\n    });\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    setSubmit(true);\n    let emailError = false,\n        passwordError = state.passwordError;\n    let filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/; // debugger\n\n    if (state.captchaCode === state.enteredCaptchaCode) {\n      if (filter.test(state.userName)) {\n        setState(prevState => {\n          return { ...prevState,\n            userNameError: false\n          };\n        });\n      } else {\n        emailError = true;\n        setState(prevState => {\n          return { ...prevState,\n            userNameError: true\n          };\n        });\n      }\n\n      if (!state.password && state.password.length < 8 && state.password.length > 0) {\n        passwordError = true;\n        setState(prevState => {\n          return { ...prevState,\n            passwordError: 'passwordlengtherror'\n          };\n        });\n      }\n\n      if (!passwordError && !emailError) {\n        let payload = {\n          email: state.userName,\n          password: state.password\n        };\n        fetchLoginService(payload, CB => {\n          if (CB.status == \"Success\") {\n            debugger;\n            config.setLoginData(CB.data);\n\n            if (CB.data.score && CB.multihazard_data.score) {\n              props.history.replace({\n                pathname: 'dashboard',\n                state: {\n                  pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                    HR: 0,\n                    OP: 0,\n                    FIN: 0,\n                    TI: 0,\n                    MKT: 0,\n                    GP: 0,\n                    HE: 0,\n                    Rint: 0,\n                    Rex: 0,\n                    Ro: 0\n                  },\n                  pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                    HR: 0,\n                    OP: 0,\n                    FIN: 0,\n                    TI: 0,\n                    MKT: 0,\n                    GP: 0,\n                    HE: 0,\n                    Rint: 0,\n                    Rex: 0,\n                    Ro: 0,\n                    PI: 0\n                  },\n                  userId: CB.data.user_id,\n                  position,\n                  assesment_type: CB.data.assesment_type\n                }\n              });\n            } else if (CB.data.score) {\n              props.history.replace({\n                pathname: 'dashboard',\n                state: {\n                  pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                    HR: 0,\n                    OP: 0,\n                    FIN: 0,\n                    TI: 0,\n                    MKT: 0,\n                    GP: 0,\n                    HE: 0,\n                    Rint: 0,\n                    Rex: 0,\n                    Ro: 0\n                  },\n                  userId: CB.data.user_id,\n                  position,\n                  assesment_type: CB.data.assesment_type\n                }\n              });\n            } else if (CB.multihazard_data.score) {\n              props.history.replace({\n                pathname: 'dashboard',\n                state: {\n                  resultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                    HR: 0,\n                    OP: 0,\n                    FIN: 0,\n                    TI: 0,\n                    MKT: 0,\n                    GP: 0,\n                    HE: 0,\n                    Rint: 0,\n                    Rex: 0,\n                    Ro: 0\n                  },\n                  pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                    HR: 0,\n                    OP: 0,\n                    FIN: 0,\n                    TI: 0,\n                    MKT: 0,\n                    GP: 0,\n                    HE: 0,\n                    Rint: 0,\n                    Rex: 0,\n                    Ro: 0,\n                    PI: 0\n                  },\n                  userId: CB.data.user_id,\n                  position,\n                  assesment_type: CB.data.assesment_type\n                }\n              });\n            }\n          } else if (CB.status == \"Error\") {\n            if (CB.code == '400') {\n              alert(CB.message);\n            } else {\n              setState(prevState => {\n                return { ...prevState,\n                  invalidUser: true\n                };\n              });\n            }\n          }\n        });\n      }\n    } else {\n      setState(prevState => {\n        return { ...prevState,\n          enteredCaptchaCodeError: true\n        };\n      });\n    }\n  };\n\n  const captchaLoaded = () => {\n    console.log('captcha laoded');\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bg-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: handleClose,\n    backdrop: \"static\",\n    centered: true,\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    style: {\n      fontFamily: 'Roboto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 21\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).guestLogin : '')), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontFamily: 'Roboto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).guestLoginData : '')), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setShow(false);\n    },\n    style: {\n      backgroundColor: '#002a4a'\n    },\n    className: \"btn btn-primary\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 25\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).cancel : ''), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      backgroundColor: '#002a4a'\n    },\n    onClick: () => {\n      setShow(false);\n      config.setLoginData({\n        userId: null\n      });\n      props.history.replace({\n        pathname: 'questionnaire',\n        state: {\n          guestUser: true,\n          userId: null\n        }\n      });\n    },\n    className: \"btn btn-primary\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 25\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).Proceed : '')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      borderBottom: '3px solid #dedede'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row head-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row tabmargin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    href: \"https://www.undrr.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"UNDRR logo\",\n    style: {\n      marginTop: '1vh',\n      marginLeft: '2vw',\n      width: '85%'\n    },\n    src: require('./../assets/img/images/undrrlogocolor.jpg'),\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 82\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5 col-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 col-4\",\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => props.history.replace({\n      pathname: '/'\n    }),\n    alt: \"logo-covid-response\",\n    src: (window.orientation == 90 || window.orientation == 270) && window.innerWidth < 850 ? require('./../assets/img/images/logo-covid-response.png') : require('./../assets/img/images/logo-covid-response1.png'),\n    style: {\n      width: '85%'\n    },\n    className: \"img-fluid hederside_logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid loginback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row alignLoginCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" loginCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" fullscreenGrad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 padd-0 welcomeClass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 29\n    }\n  }, language == 'sp' ? /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      margin: 'auto',\n      display: 'block',\n      height: '100%',\n      width: '100%'\n    },\n    alt: \"Login-box-bgsp\",\n    className: \"img-responsive\",\n    src: require('./../assets/img/images/login/Login-box-bgsp.jpg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      margin: 'auto',\n      display: 'block',\n      height: '100%',\n      width: '100%'\n    },\n    alt: \"Login-box-bg\",\n    className: \"img-responsive\",\n    src: require('./../assets/img/images/login/Login-box-bg.jpg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 25,\n      textAlign: 'center',\n      color: '#002a4a',\n      marginBottom: '0.5rem',\n      fontFamily: 'Roboto',\n      width: '90%',\n      padding: '10px',\n      borderBottom: '1px solid #002a4a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 33\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).login : ''), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 33\n    }\n  }, state.invalidUser ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 14,\n      textAlign: 'center',\n      color: '#002a4a',\n      border: '0.5px solid red',\n      backgroundColor: '#f5d5d2',\n      fontFamily: 'Roboto',\n      width: '90%',\n      padding: '5px',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 45\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).errormsg : '') : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      padding: '10px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 col-12\",\n    style: {\n      padding: '5px',\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"basic-addon1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-responsive\",\n    alt: \"mail\",\n    src: require('./../assets/img/images/login/mail.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    \"aria-label\": 'email',\n    \"aria-required\": \"true\",\n    maxLength: 50,\n    autoComplete: \"off\",\n    placeholder: localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).email : '',\n    \"aria-label\": \"Username\",\n    onChange: changeEmail,\n    \"aria-describedby\": \"basic-addon1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 49\n    }\n  })), submit && state.userNameError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: 10,\n      color: 'red',\n      margin: 0,\n      fontSize: 12,\n      fontFamily: 'Roboto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 53\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).erroremail : '') : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 col-12\",\n    style: {\n      padding: '5px',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group \",\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-responsive\",\n    alt: \"password\",\n    src: require('./../assets/img/images/login/password.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: showPassword ? \"text\" : \"password\",\n    \"aria-label\": 'password',\n    autoComplete: \"off\",\n    \"aria-required\": \"true\",\n    className: \"form-control\",\n    maxLength: 50,\n    placeholder: localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).enterPassword : '',\n    autocomplete: \"off\",\n    onChange: changePassword,\n    \"data-html\": true,\n    \"data-tip\": \"&#8226; Use atleast 12 characters.<br /> &#8226; Include both lowercase and uppercase characters.<br /> &#8226; Include atleast one number or symbol.<br /> &#8226; Password should not be based on any personal information such as user id, family name, pet, birthday, friends, co-workers, addresses, phone numbers, etc.\",\n    \"aria-describedby\": \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group-append\",\n    onClick: () => setShowPassword(!showPassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 53\n    }\n  }, showPassword ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-responsive\",\n    alt: \"invisible\",\n    src: require('./../assets/img/images/login/invisible.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 65\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-responsive\",\n    alt: \"eye\",\n    src: require('./../assets/img/images/login/eye.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 65\n    }\n  })))), state.passwordError === 'invalidPassword' ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: 10,\n      color: 'red',\n      margin: 0,\n      fontSize: 12,\n      fontFamily: 'Roboto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 93\n    }\n  }, 'Use atleast 12 characters. Include both lowercase and uppercase characters. Include atleast one number or symbol') : null, submit && state.passwordError === true ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: 10,\n      color: 'red',\n      margin: 0,\n      fontSize: 12,\n      fontFamily: 'Roboto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 90\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).password : '') : null, submit && state.passwordError === 'passwordlengtherror' ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: 10,\n      color: 'red',\n      margin: 0,\n      fontSize: 12,\n      fontFamily: 'Roboto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 107\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).invalidpassword : '') : null), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => {\n      props.history.replace({\n        pathname: 'forgot'\n      });\n    },\n    style: {\n      fontSize: 15,\n      textDecoration: 'underline',\n      width: '100%',\n      marginBottom: '0.3rem',\n      textAlign: 'right',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      color: '#002a4a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 176\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).forgotpassword : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 col-12 d-flex\",\n    style: {\n      padding: '5px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ClientCaptcha, {\n    charsCount: 6,\n    captchaClassName: \"CaptchaClass\",\n    width: 200,\n    captchaCode: setCode,\n    retryIcon: require(\"./../assets/img/reload.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 col-12\",\n    style: {\n      padding: '5px',\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    \"aria-label\": 'Captcha',\n    \"aria-required\": \"true\",\n    maxLength: 6,\n    placeholder: localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).codeInImage : \"What code is in image?\",\n    value: state.enteredCaptchaCode,\n    \"aria-label\": \"Captcha\",\n    onChange: changeCaptcha,\n    \"aria-describedby\": \"basic-addon1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 49\n    }\n  })), submit && state.enteredCaptchaCodeError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: 10,\n      color: 'red',\n      margin: 0,\n      fontSize: 12,\n      fontFamily: 'Roboto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 53\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).invalidCaptcha : \"Invalid Captcha\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      width: '100%',\n      marginTop: '10px',\n      justifyContent: 'center',\n      marginLeft: '0px',\n      marginRight: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).login : '',\n    style: {\n      width: '100%',\n      borderRadius: 5,\n      padding: '5px',\n      backgroundColor: '#b91c26'\n    },\n    className: \"btn \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      width: '100%',\n      marginTop: '10px',\n      justifyContent: 'center',\n      marginLeft: '0px',\n      marginRight: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      window.history.back();\n    },\n    style: {\n      width: '100%'\n    },\n    type: \"button\",\n    class: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 45\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).cancel : '')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      flexDirection: 'row',\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#002a4a',\n      fontFamily: 'Roboto',\n      fontSize: 16,\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 37\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).loginWith : ''), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"465258312293-a5to6ra2jco7ftpu5fr4untmid0cjrpp.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: renderProps.onClick,\n      style: {\n        borderRadius: 5,\n        padding: '5px',\n        backgroundColor: '#ffffff',\n        marginRight: '10px',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-responsive\",\n      alt: \"google\",\n      style: {\n        height: 30,\n        width: 30,\n        borderRadius: 15,\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      },\n      src: require('./../assets/img/images/login/google.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 49\n      }\n    })),\n    buttonText: \"Login\",\n    onSuccess: e => {\n      responseGoogle(e);\n    },\n    onFailure: e => {\n      responseGoogle(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      props.history.replace({\n        pathname: 'registration'\n      });\n    },\n    style: {\n      fontSize: 14,\n      textAlign: 'center',\n      marginBottom: '0.3rem',\n      color: '#002a4a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 37\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).dontaccount : '', /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      textDecoration: 'underline',\n      color: '#002a4a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 41\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).signup : '')), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 10,\n      marginRight: 10,\n      color: '#002a4a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 37\n    }\n  }, \"/\"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setShow(true),\n    style: {\n      color: '#000000',\n      fontFamily: 'Roboto',\n      fontSize: 14,\n      color: '#002a4a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      color: '#002a4a'\n    },\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 41\n    }\n  }, localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).guest : ''))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 10,\n      textAlign: 'center',\n      color: '#002a4a',\n      marginBottom: '0.5rem',\n      fontFamily: 'Roboto',\n      width: '90%',\n      padding: '10px',\n      borderBottom: '1px solid #002a4a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 21\n    }\n  }, \"Unauthorized access to this United Nations Computer System is prohibited by ST/SGB/2004/15 (''Use of information and communication technology resources and data\\\" of 29 November 2004). Authorized users shall ensure that their use of Information and Communication Technology (ICT) resources and ICT data is consistent with their obligations as staff members or such other obligations as may apply to them. All use of ICT resources and ICT data is subject to monitoring and investigation as set forth in ST/SGB/2004/15. Use of this system by any user, authorized or unauthorized, constitutes consent to the applicable UN regulations and rules.\"))));\n};\n\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","useRef","GoogleLogin","Recaptcha","Modal","FacebookLogin","config","i18n","ClientCaptcha","ReactTooltip","fetchLoginService","Login","props","show","setShow","showPassword","setShowPassword","submit","setSubmit","isVerified","setIsVerified","state","setState","userName","password","userNameError","passwordError","invalidUser","captchaCode","enteredCaptchaCode","enteredCaptchaCodeError","position","setPosition","idleTimer","handleClose","handleShow","language","setLanguage","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","localStorage","removeItem","lang","getItem","responseGoogle","e","profileObj","email","payload","name","givenName","family_name","familyName","oauth_type","CB","status","setLoginData","data","score","multihazard_data","history","replace","pathname","pastResultData","JSON","parse","HR","OP","FIN","TI","MKT","GP","HE","Rint","Rex","Ro","pastHazardResultData","PI","userId","user_id","assesment_type","resultData","alert","stringify","responseFacebook","id","changePassword","val","target","value","passwordReg","test","prevState","changeEmail","changeCaptcha","setCode","submitForm","preventDefault","emailError","filter","length","code","message","captchaLoaded","console","log","fontFamily","guestLogin","guestLoginData","display","justifyContent","backgroundColor","cancel","guestUser","Proceed","borderBottom","marginTop","marginLeft","width","require","window","orientation","innerWidth","margin","height","fontSize","textAlign","color","marginBottom","padding","login","border","errormsg","paddingLeft","erroremail","enterPassword","invalidpassword","textDecoration","cursor","forgotpassword","codeInImage","invalidCaptcha","marginRight","borderRadius","back","flexDirection","alignItems","loginWith","renderProps","onClick","boxShadow","dontaccount","signup","guest"],"sources":["D:/xamp/htdocs/RiseSchool/Archive/src/routers/Login.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './../App.css';\nimport GoogleLogin from 'react-google-login';\nimport Recaptcha from 'react-recaptcha';\nimport Modal from 'react-bootstrap/Modal'\nimport FacebookLogin from './../components/FacebookLogin';\nimport config from './../config/config';\nimport i18n from './../utils/i18n';\nimport ClientCaptcha from \"react-client-captcha\"\nimport \"react-client-captcha/dist/index.css\"\nimport ReactTooltip from 'react-tooltip';\n\nimport { fetchLoginService } from './../services/webServices';\n\nconst Login = (props) => {\n    const [show, setShow] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [submit, setSubmit] = useState(false);\n    const [isVerified, setIsVerified] = useState(false);\n    const [state, setState] = useState({\n        userName: '',\n        password: '',\n        userNameError: true,\n        passwordError: true,\n        invalidUser: false,\n        captchaCode: '',\n        enteredCaptchaCode: '',\n        enteredCaptchaCodeError: false\n    });\n    const [position, setPosition] = useState([0, 0]);\n    const idleTimer = useRef(null);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [language, setLanguage] = useState('en');\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setPosition([position.coords.latitude, position.coords.longitude])\n        })\n        localStorage.removeItem('LoginData');\n        let lang = localStorage.getItem('language');\n        setLanguage(lang);\n    }, []);\n\n    const responseGoogle = (e) => {\n        if (e.profileObj && e.profileObj.email) {\n            let payload = {\n                email: e.profileObj && e.profileObj.email,\n                name: e.profileObj && e.profileObj.givenName,\n                family_name: e.profileObj && e.profileObj.familyName,\n                oauth_type: 'google'\n            }\n            fetchLoginService(payload, (CB) => {\n                if (CB.status == \"Success\") {\n                    config.setLoginData(CB.data)\n                    // if (CB.data.score) {\n                    //     props.history.replace({\n                    //         pathname: 'dashboard',\n                    //         state: {\n                    //             pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                    //                 HR: 0,\n                    //                 OP: 0,\n                    //                 FIN: 0,\n                    //                 TI: 0,\n                    //                 MKT: 0,\n                    //                 GP: 0,\n                    //                 HE: 0,\n                    //                 Rint: 0,\n                    //                 Rex: 0,\n                    //                 Ro: 0\n                    //             },\n                    //             pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                    //                 HR: 0,\n                    //                 OP: 0,\n                    //                 FIN: 0,\n                    //                 TI: 0,\n                    //                 MKT: 0,\n                    //                 GP: 0,\n                    //                 HE: 0,\n                    //                 Rint: 0,\n                    //                 Rex: 0,\n                    //                 Ro: 0,\n                    //                 PI:0\n                    //             }, \n                    //             pastResultData: CB.data.score ? JSON.parse(CB.data.score) : null,\n                    //             pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : null,\n                    //             userId: CB.data.user_id,\n                    //             position: CB.data.latitude ? [CB.data.latitude, CB.data.longitude] : position,\n                    //             assesment_type: CB.data.assesment_type\n                    //         }\n                    //     })\n                    // }\n                    if (CB.data.score && CB.multihazard_data.score) {\n                        props.history.replace({\n                            pathname: 'dashboard',\n                            state: {\n                                pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                                    HR: 0,\n                                    OP: 0,\n                                    FIN: 0,\n                                    TI: 0,\n                                    MKT: 0,\n                                    GP: 0,\n                                    HE: 0,\n                                    Rint: 0,\n                                    Rex: 0,\n                                    Ro: 0\n                                },\n                                pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                                    HR: 0,\n                                    OP: 0,\n                                    FIN: 0,\n                                    TI: 0,\n                                    MKT: 0,\n                                    GP: 0,\n                                    HE: 0,\n                                    Rint: 0,\n                                    Rex: 0,\n                                    Ro: 0,\n                                    PI:0\n                                }, \n                                userId: CB.data.user_id, \n                                position,\n                                assesment_type: CB.data.assesment_type\n                            }\n                        })\n                    }\n                    else if (CB.data.score) {\n                        props.history.replace({\n                            pathname: 'dashboard',\n                            state: {\n                                pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                                    HR: 0,\n                                    OP: 0,\n                                    FIN: 0,\n                                    TI: 0,\n                                    MKT: 0,\n                                    GP: 0,\n                                    HE: 0,\n                                    Rint: 0,\n                                    Rex: 0,\n                                    Ro: 0\n                                }, \n                                userId: CB.data.user_id, \n                                position,\n                                assesment_type: CB.data.assesment_type\n                            }\n                        })\n                    }\n                    else if (CB.multihazard_data.score) {\n                        props.history.replace({\n                            pathname: 'dashboard',\n                            state: {\n                                resultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                                    HR: 0,\n                                    OP: 0,\n                                    FIN: 0,\n                                    TI: 0,\n                                    MKT: 0,\n                                    GP: 0,\n                                    HE: 0,\n                                    Rint: 0,\n                                    Rex: 0,\n                                    Ro: 0\n                                },\n                                pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                                    HR: 0,\n                                    OP: 0,\n                                    FIN: 0,\n                                    TI: 0,\n                                    MKT: 0,\n                                    GP: 0,\n                                    HE: 0,\n                                    Rint: 0,\n                                    Rex: 0,\n                                    Ro: 0,\n                                    PI:0\n                                },\n                                userId: CB.data.user_id, \n                                position,\n                                assesment_type: CB.data.assesment_type\n                            }\n                        })\n                    }\n                    else {\n                        props.history.replace({\n                            pathname: 'questionnaire',\n                            state: { userId: CB.data.user_id }\n                        })\n                    }\n                }\n            });\n        }\n        else {\n            alert('Please try later' + JSON.stringify(e))\n        }\n    }\n\n    const responseFacebook = (e) => {\n        let payload = {\n            email: e.email ? e.email : e.id,\n            name: e.name ? e.name : '',\n            oauth_type: 'facebook'\n        }\n        fetchLoginService(payload, (CB) => {\n            if (CB.status == \"Success\") {\n\n                props.history.replace({\n                    pathname: 'dashboard',\n                    state: {\n                        resultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                            HR: 0, OP: 0, FIN: 0, TI: 0, MKT: 0, GP: 0, HE: 0, Rint: 0, Rex: 0, Ro: 0\n                        }, \n                        userId: CB.data.user_id, \n                        position,\n                        assesment_type: CB.data.assesment_type \n                    }\n                })\n            }\n        });\n    }\n\n    const changePassword = (e) => {\n        const val = e.target.value;\n        const passwordReg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{12,}$/;\n\n        if (passwordReg.test(val)) {\n            setState(prevState => {\n                return { ...prevState, password: val, passwordError: false, invalidUser: false }\n            })\n        }\n        else {\n            setState(prevState => {\n                return { ...prevState, password: val, passwordError: 'invalidPassword', invalidUser: false }\n            })\n        }\n    }\n\n    const changeEmail = (e) => {\n        const val = e.target.value;\n        setState(prevState => {\n            return { ...prevState, userName: val, userNameError: false, invalidUser: false }\n        })\n    }\n\n    const changeCaptcha = (e) => {\n        let val = e.target.value;\n        if (val === \"\") {\n            setState(prevState => {\n                return { ...prevState, enteredCaptchaCode: val, enteredCaptchaCodeError: true }\n            })\n        }\n        else {\n            setState(prevState => {\n                return { ...prevState, enteredCaptchaCode: val, enteredCaptchaCodeError: false }\n            })\n        }\n    }\n\n    const setCode = captchaCode => {\n        setState(prevState => {\n            return { ...prevState, captchaCode: captchaCode, enteredCaptchaCode: '', enteredCaptchaCodeError: false }\n        })\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault()\n\n        setSubmit(true)\n\n        let emailError = false, passwordError = state.passwordError;\n        let filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n        // debugger\n        if (state.captchaCode === state.enteredCaptchaCode) {\n            if (filter.test(state.userName)) {\n                setState(prevState => {\n                    return { ...prevState, userNameError: false }\n                })\n            }\n            else {\n                emailError = true;\n                setState(prevState => {\n                    return { ...prevState, userNameError: true }\n                })\n            }\n\n            if (!state.password && (state.password.length < 8) && (state.password.length > 0)) {\n                passwordError = true\n                setState(prevState => {\n                    return { ...prevState, passwordError: 'passwordlengtherror' }\n                })\n            }\n\n            if (!passwordError && !emailError) {\n                let payload = {\n                    email: state.userName,\n                    password: state.password,\n                }\n\n                fetchLoginService(payload, (CB) => {\n                    if (CB.status == \"Success\") {\n                        debugger\n                        config.setLoginData(CB.data)\n                        if (CB.data.score && CB.multihazard_data.score) {\n                            props.history.replace({\n                                pathname: 'dashboard',\n                                state: {\n                                    pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                                        HR: 0,\n                                        OP: 0,\n                                        FIN: 0,\n                                        TI: 0,\n                                        MKT: 0,\n                                        GP: 0,\n                                        HE: 0,\n                                        Rint: 0,\n                                        Rex: 0,\n                                        Ro: 0\n                                    },\n                                    pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                                        HR: 0,\n                                        OP: 0,\n                                        FIN: 0,\n                                        TI: 0,\n                                        MKT: 0,\n                                        GP: 0,\n                                        HE: 0,\n                                        Rint: 0,\n                                        Rex: 0,\n                                        Ro: 0,\n                                        PI:0\n                                    }, \n                                    userId: CB.data.user_id, \n                                    position,\n                                    assesment_type: CB.data.assesment_type\n                                }\n                            })\n                        }\n                        else if (CB.data.score) {\n                            props.history.replace({\n                                pathname: 'dashboard',\n                                state: {\n                                    pastResultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                                        HR: 0,\n                                        OP: 0,\n                                        FIN: 0,\n                                        TI: 0,\n                                        MKT: 0,\n                                        GP: 0,\n                                        HE: 0,\n                                        Rint: 0,\n                                        Rex: 0,\n                                        Ro: 0\n                                    }, \n                                    userId: CB.data.user_id, \n                                    position,\n                                    assesment_type: CB.data.assesment_type\n                                }\n                            })\n                        }\n                        else if (CB.multihazard_data.score) {\n                            props.history.replace({\n                                pathname: 'dashboard',\n                                state: {\n                                    resultData: CB.data.score ? JSON.parse(CB.data.score) : {\n                                        HR: 0,\n                                        OP: 0,\n                                        FIN: 0,\n                                        TI: 0,\n                                        MKT: 0,\n                                        GP: 0,\n                                        HE: 0,\n                                        Rint: 0,\n                                        Rex: 0,\n                                        Ro: 0\n                                    },\n                                    pastHazardResultData: CB.multihazard_data.score ? JSON.parse(CB.multihazard_data.score) : {\n                                        HR: 0,\n                                        OP: 0,\n                                        FIN: 0,\n                                        TI: 0,\n                                        MKT: 0,\n                                        GP: 0,\n                                        HE: 0,\n                                        Rint: 0,\n                                        Rex: 0,\n                                        Ro: 0,\n                                        PI:0\n                                    },\n                                    userId: CB.data.user_id, \n                                    position,\n                                    assesment_type: CB.data.assesment_type\n                                }\n                            })\n                        }\n                    }\n                    else if (CB.status == \"Error\") {\n                        if (CB.code == '400') {\n                            alert(CB.message)\n                        } else {\n                            setState(prevState => {\n                                return { ...prevState, invalidUser: true }\n                            })\n                        }\n                    }\n                });\n            }\n        }\n        else {\n            setState(prevState => {\n                return { ...prevState, enteredCaptchaCodeError: true }\n            })\n        }\n\n    }\n\n    const captchaLoaded = () => {\n        console.log('captcha laoded')\n    }\n\n    return (\n        <section className=\"bg-img\" >\n            <Modal\n                size='lg'\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                centered\n                keyboard={false}\n            >\n                <Modal.Header >\n                    <Modal.Title style={{ fontFamily: 'Roboto' }}>\n                        {\n                            localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).guestLogin : ''\n                        }\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p style={{ fontFamily: 'Roboto' }}>\n                        {\n                            localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).guestLoginData : ''\n                        }\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className=\"col-md-12\" style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <button\n                            onClick={() => {\n                                setShow(false)\n                            }} style={{ backgroundColor: '#002a4a' }} className='btn btn-primary' variant=\"primary\">\n                            {\n                                localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).cancel : ''\n                            }\n                        </button>\n\n                        <button\n                            style={{ backgroundColor: '#002a4a' }}\n                            onClick={() => {\n                                setShow(false)\n                                config.setLoginData({\n                                    userId: null\n                                })\n                                props.history.replace({\n                                    pathname: 'questionnaire',\n                                    state: { guestUser: true, userId: null }\n                                })\n                            }} className='btn btn-primary' variant=\"primary\">\n                            {\n                                localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).Proceed : ''\n                            }\n                        </button>\n                    </div>\n                </Modal.Footer>\n            </Modal>\n            <div className=\"container-fluid\" style={{ borderBottom: '3px solid #dedede' }}>\n                <div className=\"row head-img\" >\n                    <div className=\"col-md-12 \">\n                        <div className=\"row tabmargin\">\n                            <div className=\"col-md-3 col-3\">\n                                <a target=\"_blank\" href='https://www.undrr.org/'><img alt=\"UNDRR logo\" style={{ marginTop: '1vh', marginLeft: '2vw', width: '85%' }} src={require('./../assets/img/images/undrrlogocolor.jpg')} className=\"img-fluid\" />\n                                </a>\n                            </div>\n                            <div className=\"col-md-5 col-5\" />\n                            <div className=\"col-md-4 col-4\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                <img\n                                    onClick={() => props.history.replace({\n                                        pathname: '/',\n                                    })\n                                    }\n                                    alt=\"logo-covid-response\"\n                                    src={(window.orientation == 90 || window.orientation == 270) && window.innerWidth < 850 ? require('./../assets/img/images/logo-covid-response.png') : require('./../assets/img/images/logo-covid-response1.png')} style={{ width: '85%' }} className=\"img-fluid hederside_logo\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n            <div className=\"container-fluid loginback\" >\n                <div className=\"row alignLoginCard\" >\n                    <div className=\" loginCard\">\n                        <div className=' fullscreenGrad' >\n                            <div className=\"col-md-6 padd-0 welcomeClass\" >\n                                {\n                                    language == 'sp' ?\n                                        <img\n                                            style={{ margin: 'auto', display: 'block', height: '100%', width: '100%' }}\n                                            alt=\"Login-box-bgsp\"\n                                            className=\"img-responsive\"\n                                            src={require('./../assets/img/images/login/Login-box-bgsp.jpg')} />\n                                        :\n                                        <img\n                                            style={{ margin: 'auto', display: 'block', height: '100%', width: '100%' }}\n                                            alt=\"Login-box-bg\"\n                                            className=\"img-responsive\"\n                                            src={require('./../assets/img/images/login/Login-box-bg.jpg')} />\n\n                                }\n                            </div>\n                            <div className=\"col-md-6 col-12\">\n                                <p\n                                    style={{ fontSize: 25, textAlign: 'center', color: '#002a4a', marginBottom: '0.5rem', fontFamily: 'Roboto', width: '90%', padding: '10px', borderBottom: '1px solid #002a4a' }}>\n                                    {\n                                        localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).login : ''\n                                    }\n                                </p>\n                                <form action=\"\" onSubmit={submitForm} >\n                                    {\n                                        state.invalidUser ?\n                                            <p style={{ fontSize: 14, textAlign: 'center', color: '#002a4a', border: '0.5px solid red', backgroundColor: '#f5d5d2', fontFamily: 'Roboto', width: '90%', padding: '5px', margin: 0 }}>\n                                                {\n                                                    localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).errormsg : ''\n                                                }\n                                            </p>\n                                            :\n                                            null\n                                    }\n                                    <div className=\"row\" style={{ padding: '10px', width: '100%' }}>\n                                        <div className={\"col-md-12 col-12\"} style={{ padding: '5px', width: '80%' }}>\n                                            <div className=\"input-group\" style={{ marginBottom: 0 }}>\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\" id=\"basic-addon1\">\n                                                        <img\n                                                            className=\"img-responsive\"\n                                                            alt=\"mail\"\n                                                            src={require('./../assets/img/images/login/mail.png')} />\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    aria-label={'email'}\n                                                    aria-required=\"true\"\n                                                    maxLength={50}\n                                                    autoComplete=\"off\"\n                                                    placeholder={\n                                                        localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).email : ''\n                                                    }\n                                                    aria-label=\"Username\"\n                                                    onChange={changeEmail}\n                                                    aria-describedby=\"basic-addon1\" />\n                                            </div>\n                                            {\n                                                submit && state.userNameError\n                                                    ?\n                                                    <p style={{ paddingLeft: 10, color: 'red', margin: 0, fontSize: 12, fontFamily: 'Roboto' }}>\n                                                        {\n                                                            localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).erroremail : ''\n                                                        }\n                                                    </p>\n                                                    :\n                                                    null\n                                            }\n                                        </div>\n                                        <div className={\"col-md-12 col-12\"} style={{ padding: '5px', marginTop: '10px' }}>\n                                            <ReactTooltip />\n                                            <div className=\"input-group \" style={{ marginBottom: 0 }}>\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\" id=\"basic-addon2\">\n                                                        <img\n                                                            className=\"img-responsive\"\n                                                            alt=\"password\"\n                                                            src={require('./../assets/img/images/login/password.png')} />\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type={showPassword ? \"text\" : \"password\"}\n                                                    aria-label={'password'}\n                                                    autoComplete=\"off\"\n                                                    aria-required=\"true\"\n                                                    className=\"form-control\"\n                                                    maxLength={50}\n                                                    placeholder={\n                                                        localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).enterPassword : ''\n                                                    }\n                                                    autocomplete=\"off\"\n                                                    onChange={changePassword}\n                                                    data-html={true}\n                                                    data-tip=\"&amp;#8226; Use atleast 12 characters.<br />\n                                                    &amp;#8226; Include both lowercase and uppercase characters.<br />\n                                                    &amp;#8226; Include atleast one number or symbol.<br />\n                                                    &amp;#8226; Password should not be based on any personal information such as user id, family name, pet, birthday, friends, co-workers, addresses, phone numbers, etc.\"\n                                                    aria-describedby=\"basic-addon2\" \n                                                />\n                                                <div class=\"input-group-append\" onClick={() => setShowPassword(!showPassword)}>\n                                                    <span class=\"input-group-text\">\n                                                        {\n                                                            showPassword ?\n                                                                <img\n                                                                    className=\"img-responsive\"\n                                                                    alt=\"invisible\"\n                                                                    src={require('./../assets/img/images/login/invisible.png')} />\n                                                                :\n                                                                <img\n                                                                    className=\"img-responsive\"\n                                                                    alt=\"eye\"\n                                                                    src={require('./../assets/img/images/login/eye.png')} />\n                                                        }\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            {\n                                                state.passwordError === 'invalidPassword' ? <p style={{ paddingLeft: 10, color: 'red', margin: 0, fontSize: 12, fontFamily: 'Roboto' }}>\n                                                    {\n                                                        'Use atleast 12 characters. Include both lowercase and uppercase characters. Include atleast one number or symbol'\n                                                    }\n                                                </p> : null\n                                            }\n                                            {\n                                                submit && state.passwordError === true ? <p style={{ paddingLeft: 10, color: 'red', margin: 0, fontSize: 12, fontFamily: 'Roboto' }}>\n                                                    {\n                                                        localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).password : ''\n                                                    }\n                                                </p> : null\n                                            }\n                                            {\n                                                submit && state.passwordError === 'passwordlengtherror' ? <p style={{ paddingLeft: 10, color: 'red', margin: 0, fontSize: 12, fontFamily: 'Roboto' }}>\n                                                    {\n                                                        localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).invalidpassword : ''\n                                                    }\n                                                </p>\n                                                    :\n                                                    null\n                                            }\n                                        </div>\n                                        <p onClick={() => {\n                                            props.history.replace({\n                                                pathname: 'forgot',\n                                            })\n                                        }} style={{ fontSize: 15, textDecoration: 'underline', width: '100%', marginBottom: '0.3rem', textAlign: 'right', cursor: 'pointer' }}><a style={{ color: '#002a4a' }}>\n                                                {\n                                                    localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).forgotpassword : ''\n                                                }\n                                            </a>\n                                        </p>\n                                        <div className={\"col-md-12 col-12 d-flex\"} style={{ padding: '5px', width: '100%' }}>\n                                            <ClientCaptcha\n                                                charsCount={6}\n                                                captchaClassName=\"CaptchaClass\"\n                                                width={200}\n                                                captchaCode={setCode}\n                                                retryIcon={require(\"./../assets/img/reload.png\")}\n                                            />\n                                        </div>\n                                        <div className={\"col-md-12 col-12\"} style={{ padding: '5px', width: '80%' }}>\n                                            <div className=\"input-group\" style={{ marginBottom: 0 }}>\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    aria-label={'Captcha'}\n                                                    aria-required=\"true\"\n                                                    maxLength={6}\n                                                    placeholder={\n                                                        localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).codeInImage : \"What code is in image?\"\n                                                    }\n                                                    value={state.enteredCaptchaCode}\n                                                    aria-label=\"Captcha\"\n                                                    onChange={changeCaptcha}\n                                                    aria-describedby=\"basic-addon1\" />\n                                            </div>\n                                            {\n                                                submit && state.enteredCaptchaCodeError\n                                                    ?\n                                                    <p style={{ paddingLeft: 10, color: 'red', margin: 0, fontSize: 12, fontFamily: 'Roboto' }}>\n                                                        {\n                                                            localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).invalidCaptcha : \"Invalid Captcha\"\n                                                        }\n                                                    </p>\n                                                    :\n                                                    null\n                                            }\n                                        </div>\n                                        <div\n                                            className=\"row\"\n                                            style={{ width: '100%', marginTop: '10px', justifyContent: 'center', marginLeft: '0px', marginRight: '0px' }}>\n                                            <input\n                                                type='submit'\n                                                value={\n                                                    localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).login : ''\n                                                }\n                                                style={{ width: '100%', borderRadius: 5, padding: '5px', backgroundColor: '#b91c26' }} className=\"btn \" />\n                                        </div>\n                                        <div\n                                            className=\"row\"\n                                            style={{ width: '100%', marginTop: '10px', justifyContent: 'center', marginLeft: '0px', marginRight: '0px' }}>\n                                            <button\n                                                onClick={() => {\n                                                    window.history.back()\n                                                }}\n                                                style={{ width: '100%' }}\n                                                type=\"button\"\n                                                class=\"btn btn-light\">\n                                                {\n                                                    localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).cancel : ''\n                                                }\n                                            </button>\n                                        </div>\n                                        {/* <Recaptcha\n                                            sitekey=\"6Leb1BIbAAAAAO9PdMjd6-jXcs0yJBR5Sz8Ro0ju\"\n                                            render=\"explicit\"\n                                            onloadCallback={captchaLoaded}\n                                        /> */}\n                                    </div>\n                                </form>\n                                <div className='row' style={{ flexDirection: 'row', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n                                    <span style={{ color: '#002a4a', fontFamily: 'Roboto', fontSize: 16, marginRight: '10px' }}>\n                                        {\n                                            localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).loginWith : ''\n                                        }\n                                    </span>\n                                    <GoogleLogin\n                                        clientId=\"465258312293-a5to6ra2jco7ftpu5fr4untmid0cjrpp.apps.googleusercontent.com\"\n                                        render={renderProps => (\n                                            <div onClick={renderProps.onClick} style={{ borderRadius: 5, padding: '5px', backgroundColor: '#ffffff', marginRight: '10px', cursor: 'pointer' }}>\n                                                <img className=\"img-responsive\" alt=\"google\" style={{ height: 30, width: 30, borderRadius: 15, boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' }} src={require('./../assets/img/images/login/google.png')} />\n                                            </div>\n                                        )}\n                                        buttonText=\"Login\"\n                                        onSuccess={(e) => { responseGoogle(e) }}\n                                        onFailure={(e) => { responseGoogle(e) }}\n                                    />\n                                    <div style={{ height: 10 }} />\n                                </div>\n                                <div>\n                                    <span\n                                        onClick={() => {\n                                            props.history.replace({\n                                                pathname: 'registration',\n                                            })\n                                        }}\n                                        style={{ fontSize: 14, textAlign: 'center', marginBottom: '0.3rem', color: '#002a4a' }}>\n                                        {\n                                            localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).dontaccount : ''\n                                        }\n                                        <a\n                                            style={{ textDecoration: 'underline', color: '#002a4a' }}>\n                                            {\n                                                localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).signup : ''\n                                            }\n                                        </a>\n                                    </span>\n                                    <span\n                                        style={{ marginLeft: 10, marginRight: 10, color: '#002a4a', }}>/</span>\n                                    <span\n                                        onClick={() => setShow(true)}\n                                        style={{ color: '#000000', fontFamily: 'Roboto', fontSize: 14, color: '#002a4a' }}>\n                                        <a style={{ color: '#002a4a' }} href=\"#\">\n                                            {\n                                                localStorage.getItem(`LangDataFor${language}`) ? JSON.parse(localStorage.getItem(`LangDataFor${language}`)).guest : ''\n                                            }\n                                        </a>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-12 col-12\">\n                    <p\n                        style={{ fontSize: 10, textAlign: 'center', color: '#002a4a', marginBottom: '0.5rem', fontFamily: 'Roboto', width: '90%', padding: '10px', borderBottom: '1px solid #002a4a' }}>\n                        Unauthorized access to this United Nations Computer System is prohibited by ST/SGB/2004/15 (''Use of information and communication technology resources and data\" of 29 November 2004). Authorized users shall ensure that their use of Information and Communication Technology (ICT) resources and ICT data is consistent with their obligations as staff members or such other obligations as may apply to them. All use of ICT resources and ICT data is subject to monitoring and investigation as set forth in ST/SGB/2004/15. Use of this system by any user, authorized or unauthorized, constitutes consent to the applicable UN regulations and rules.\n                    </p>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}